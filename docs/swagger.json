{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteoramaapi",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Tasteoramaapi"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    },
    {
      "url": "https://tasteoramaapi.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Registration and login"
    },
    {
      "name": "Categories",
      "description": "This is operations about categories"
    },
    {
      "name": "Recipes",
      "description": "This is operations about recipes"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "loginUser",
        "description": "Authenticate User with email and password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accesToken"
                      ],
                      "properties": {
                        "accesToken": {
                          "type": "string",
                          "example": "Sad3SNuuobrYmM6o5iQtKHlxUgKIO/KZK4fdm6w+"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register an account",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "Username",
                    "type": "string",
                    "example": "Eva"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "eva@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "1234qwerty"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout User",
        "operationId": "logoutUser",
        "description": "Logout a user",
        "security": [],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get list of categories",
        "operationId": "getCategories",
        "description": "Get list of food categories with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found categories!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found categories!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/category"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Get list of ingredients",
        "operationId": "getIngredients",
        "description": "Get list of food ingredients with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found ingredients!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found ingredients!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ingredient"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Search recipes by category, ingredients, or title",
        "operationId": "searchBy",
        "description": "Returns a paginated list of recipes matching the search criteria",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "example": "Lamb"
            },
            "description": "Category name to filter recipes"
          },
          {
            "in": "query",
            "name": "ingredients",
            "schema": {
              "type": "string",
              "example": "Tomato,Cheese"
            },
            "description": "Comma-separated list of ingredient names or IDs"
          },
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string",
              "example": "Soup"
            },
            "description": "Partial title to search"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RecipesList"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create recipe",
        "operationId": "createRecipe",
        "description": "Create a recipe with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "category",
                  "instructions",
                  "time",
                  "description",
                  "ingredients"
                ],
                "properties": {
                  "title": {
                    "description": "Recipe's title",
                    "type": "string",
                    "example": "John Cake"
                  },
                  "category": {
                    "description": "Recipe's category",
                    "type": "string",
                    "example": "dessert"
                  },
                  "instructions": {
                    "description": "Recipe's instructions",
                    "type": "string",
                    "example": "Heat oven to 180C/160C fan/gas 4 and line the base and sides of a 20cm square tin with baking parchment..."
                  },
                  "description": {
                    "description": "Recipe's description",
                    "type": "string",
                    "example": "A classic British cake made with almond sponge cake and covered with marzipan. It is traditionally pink and yellow checkered in appearance."
                  },
                  "time": {
                    "description": "Recipe's cooking time",
                    "type": "string",
                    "example": 120
                  },
                  "thumb": {
                    "description": "Recipe's photo",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  },
                  "ingredients": {
                    "description": "Recipe's ingredients",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "measure"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "640c2dd963a319ea671e367e"
                        },
                        "measure": {
                          "type": "string",
                          "example": "175g"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a recipe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a recipe!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/recipe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by id",
        "operationId": "getRecipe",
        "description": "Retrieve a single recipe by its unique identifier.",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28897fcd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found recipe with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get recipe with id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/recipe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/api/recipes/favorites/{id}": {
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove recipe from favorites",
        "operationId": "deleteFavoriteRecipe",
        "description": "Remove a recipe from the user's list of favorite recipes by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28897fcd"
            },
            "description": "ID of the recipe to remove from favorites"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed recipe from favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe removed from favorites"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Favorite recipes"
        ],
        "summary": "Add a recipe to user's favorites",
        "description": "Allows an authenticated user to add a specific recipe to their list of favorite recipes.",
        "operationId": "addFavoriteRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the recipe to be added to favorites",
            "schema": {
              "type": "string",
              "example": "66c5d22f8b1f2d5ad93f2e11"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "favoritesRecipes"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites"
                    },
                    "favoritesRecipes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "_id",
                          "title",
                          "category",
                          "owner",
                          "area",
                          "instructions",
                          "description",
                          "thumb",
                          "time",
                          "ingredients",
                          "createdAt",
                          "updatedAt"
                        ],
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "6462a8f74c3d0ddd28897fcd"
                          },
                          "title": {
                            "type": "string",
                            "example": "Battenberg Cake"
                          },
                          "category": {
                            "type": "string",
                            "example": "Dessert"
                          },
                          "owner": {
                            "type": "string",
                            "example": "64c8d958249fae54bae90bb9"
                          },
                          "area": {
                            "type": "string",
                            "example": "British"
                          },
                          "instructions": {
                            "type": "string",
                            "example": "Heat oven to 180C/160C fan/gas 4 and line the base..."
                          },
                          "description": {
                            "type": "string",
                            "example": "A classic British cake made with almond sponge cake..."
                          },
                          "thumb": {
                            "type": "string",
                            "example": "https://ftp.goit.study/img/so-yummy/preview/Battenberg%20Cake.jpg"
                          },
                          "time": {
                            "type": "string",
                            "example": "60"
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "measure"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "640c2dd963a319ea671e367e"
                                },
                                "measure": {
                                  "type": "string",
                                  "example": "175g"
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-03-11T19:25:33.243Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-03-03T22:47:51.976Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "getUser",
        "description": "Get current authenticated user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Already in use"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RecipesList": {
        "description": "List of recipes with paginator",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/recipe"
                  }
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "perPage": {
                  "type": "integer",
                  "example": 12
                },
                "totalPages": {
                  "type": "integer",
                  "example": 5
                },
                "totalResults": {
                  "type": "integer",
                  "example": 60
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "title": "User",
        "description": "User account information with personal details and preferences",
        "required": [
          "_id",
          "name",
          "email",
          "favouriteRecipes",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User unique identifier",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's unique email address used for authentication and notifications",
            "example": "john.doe@example.com"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar URL or null",
            "format": "uri",
            "example": "https://example.com/avatars/user123.jpg"
          },
          "favouriteRecipes": {
            "type": "array",
            "description": "Collection of recipe IDs that the user has marked as favorites",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId reference to a recipe document",
              "example": "6462a8f74c3d0ddd28898069"
            },
            "example": [
              "507f1f77bcf86cd799439012",
              "507f1f77bcf86cd799439013"
            ],
            "default": []
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User update timestamp",
            "readOnly": true,
            "example": "2024-01-15T10:30:00.000Z"
          }
        },
        "example": {
          "_id": "507f1f77bcf86cd799439011",
          "name": "John Doe",
          "email": "john.doe@example.com",
          "avatar": "https://example.com/avatars/user123.jpg",
          "favouriteRecipes": [
            "507f1f77bcf86cd799439012",
            "507f1f77bcf86cd799439013"
          ],
          "createdAt": "2024-01-15T10:30:00.000Z",
          "updatedAt": "2024-01-15T10:30:00.000Z"
        }
      },
      "category": {
        "type": "object",
        "title": "Category",
        "description": "Food category used to classify and organize recipes",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Category's unique identifier",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "name": {
            "type": "string",
            "description": "Category's name",
            "example": "Italian"
          }
        },
        "example": {
          "_id": "65ca67e7ae7f10c88b598384",
          "name": "Italian"
        }
      },
      "ingredient": {
        "type": "object",
        "title": "Ingredient",
        "description": "Ingredient information used in recipes with details and visual representation",
        "required": [
          "_id",
          "name",
          "desc",
          "img"
        ],
        "properties": {
          "_id": {
            "description": "Ingredient's id",
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "name": {
            "type": "string",
            "example": "Tomato"
          },
          "desc": {
            "type": "string",
            "example": "Fresh red tomato, perfect for salads and cooking"
          },
          "img": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/images/tomato.png"
          }
        },
        "example": {
          "_id": "65ca67e7ae7f10c88b598384",
          "name": "Tomato",
          "desc": "Fresh red tomato, perfect for salads and cooking",
          "img": "https://example.com/images/tomato.png"
        }
      },
      "recipe": {
        "type": "object",
        "title": "Recipe",
        "description": "Recipe information",
        "required": [
          "_id",
          "title",
          "category",
          "owner",
          "instructions",
          "description",
          "time",
          "ingredients"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier of the recipe",
            "example": "6462a8f74c3d0ddd28897fcd"
          },
          "title": {
            "type": "string",
            "description": "Recipe's title",
            "example": "Battenberg Cake"
          },
          "category": {
            "type": "string",
            "description": "Recipe's category",
            "example": "Dessert"
          },
          "owner": {
            "type": "string",
            "description": "ID of the user who created the recipe",
            "example": "64c8d958249fae54bae90bb9"
          },
          "area": {
            "type": "string",
            "description": "Recipe's area or origin",
            "example": "British"
          },
          "instructions": {
            "type": "string",
            "description": "Recipe's instructions",
            "example": "Heat oven to 180C/160C fan/gas 4 and line the base..."
          },
          "description": {
            "type": "string",
            "description": "Recipe's description",
            "example": "A classic British cake made with almond sponge cake..."
          },
          "thumb": {
            "type": "string",
            "format": "binary",
            "description": "Recipe's photo",
            "example": "https://ftp.goit.study/img/so-yummy/preview/Battenberg%20Cake.jpg"
          },
          "time": {
            "type": "string",
            "description": "Recipe's cooking time in minutes",
            "example": "60"
          },
          "ingredients": {
            "type": "array",
            "description": "List of ingredients with measurements",
            "items": {
              "type": "object",
              "required": [
                "id",
                "measure"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredient ID",
                  "example": "640c2dd963a319ea671e367e"
                },
                "measure": {
                  "type": "string",
                  "description": "Amount of ingredient",
                  "example": "175g"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-11T10:25:33.243Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-03T16:47:51.976Z"
          }
        }
      }
    }
  }
}