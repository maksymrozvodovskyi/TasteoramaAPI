{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteoramaapi",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Tasteoramaapi"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    },
    {
      "url": "https://tasteoramaapi.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Categories",
      "description": "This is operations about categories"
    }
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get list of categories",
        "operationId": "getCategories",
        "description": "Get list of food categories with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found categories!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found categories!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/category"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Get list of ingredients",
        "operationId": "getIngredients",
        "description": "Get list of food ingredients with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found ingredients!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found ingredients!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ingredient"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "getUser",
        "description": "Get current authenticated user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "category": {
        "type": "object",
        "title": "Category",
        "description": "Food category used to classify and organize recipes",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Category's unique identifier",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "name": {
            "type": "string",
            "description": "Category's name",
            "example": "Italian"
          }
        },
        "example": {
          "_id": "65ca67e7ae7f10c88b598384",
          "name": "Italian"
        }
      },
      "ingredient": {
        "type": "object",
        "title": "Ingredient",
        "description": "Ingredient information used in recipes with details and visual representation",
        "required": [
          "_id",
          "name",
          "desc",
          "img"
        ],
        "properties": {
          "_id": {
            "description": "Ingredient's id",
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "name": {
            "type": "string",
            "example": "Tomato"
          },
          "desc": {
            "type": "string",
            "example": "Fresh red tomato, perfect for salads and cooking"
          },
          "img": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/images/tomato.png"
          }
        },
        "example": {
          "_id": "65ca67e7ae7f10c88b598384",
          "name": "Tomato",
          "desc": "Fresh red tomato, perfect for salads and cooking",
          "img": "https://example.com/images/tomato.png"
        }
      },
      "user": {
        "type": "object",
        "title": "User",
        "description": "User account information with personal details and preferences",
        "required": [
          "_id",
          "name",
          "email"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User unique identifier",
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar URL",
            "format": "uri",
            "example": "https://example.com/avatar.jpg"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's unique email address used for authentication and notifications",
            "example": "john.doe@example.com"
          },
          "favouriteRecipes": {
            "type": "array",
            "description": "Collection of recipe IDs that the user has marked as favorites",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId reference to a recipe document"
            },
            "example": [
              "507f1f77bcf86cd799439012",
              "507f1f77bcf86cd799439013"
            ],
            "default": []
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2024-01-15T10:30:00.000Z"
          }
        },
        "example": {
          "_id": "507f1f77bcf86cd799439011",
          "name": "John Doe",
          "avatar": "https://example.com/avatars/user123.jpg",
          "email": "john.doe@example.com",
          "favouriteRecipes": [
            "507f1f77bcf86cd799439012",
            "507f1f77bcf86cd799439013"
          ],
          "createdAt": "2024-01-15T10:30:00.000Z",
          "updatedAt": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "internalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  }
}