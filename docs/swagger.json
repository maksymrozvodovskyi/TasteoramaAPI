{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteoramaapi",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Tasteoramaapi"
  },
  "servers": [
    { "url": "http://127.0.0.1:3000" },
    { "url": "https://tasteoramaapi.onrender.com" }
  ],
  "tags": [
    { "name": "Auth", "description": "Registration and login" },
    { "name": "Categories", "description": "Operations about categories" },
    { "name": "Recipes", "description": "Operations about recipes" },
    { "name": "Users", "description": "Operations about users" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "operationId": "register",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": { "type": "string", "example": "Eva" },
                  "email": { "type": "string", "example": "eva@example.com" },
                  "password": { "type": "string", "example": "1234qwerty" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 201 },
                    "message": { "type": "string", "example": "User created successfully" },
                    "data": {
                      "type": "object",
                      "properties": { "user": { "$ref": "#/components/schemas/user" } }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "409": { "$ref": "#/components/responses/409" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "operationId": "logout",
        "description": "Logout current user",
        "security": [],
        "responses": {
          "204": { "description": "No content. Logged out successfully." },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get categories",
        "responses": {
          "200": {
            "description": "Categories list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/category" }
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get ingredients",
        "responses": {
          "200": {
            "description": "Ingredients list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ingredient" }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/user" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/api/recipes": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get all recipes",
        "responses": {
          "200": {
            "description": "Recipes list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/recipe" }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get recipe by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/recipe" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer" }
    },
    "schemas": {
      "user": {
        "type": "object",
        "title": "User",
        "required": ["_id", "name", "email", "favouriteRecipes", "createdAt", "updatedAt"],
        "properties": {
          "_id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$", "example": "507f1f77bcf86cd799439011" },
          "name": { "type": "string", "example": "John Doe" },
          "avatar": { "type": "string", "nullable": true, "format": "uri", "example": "https://example.com/avatar.jpg" },
          "email": { "type": "string", "format": "email", "example": "john.doe@example.com" },
          "favouriteRecipes": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" },
            "example": ["507f1f77bcf86cd799439012"],
            "default": []
          },
          "createdAt": { "type": "string", "format": "date-time", "example": "2024-01-15T10:30:00Z" },
          "updatedAt": { "type": "string", "format": "date-time", "example": "2024-01-15T10:30:00Z" }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" },
          "name": { "type": "string", "example": "Dessert" }
        }
      },
      "ingredient": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" },
          "name": { "type": "string", "example": "Sugar" },
          "type": { "type": "string", "example": "Sweetener" }
        }
      },
      "recipe": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" },
          "title": { "type": "string", "example": "Chocolate Cake" },
          "description": { "type": "string", "example": "Delicious cake" },
          "ingredients": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ingredient" }
          },
          "category": { "$ref": "#/components/schemas/category" },
          "owner": { "$ref": "#/components/schemas/user" }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "integer", "example": 400 },
                "message": { "type": "string", "example": "Bad Request" },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Invalid input data" }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "integer", "example": 401 },
                "message": { "type": "string", "example": "UnauthorizedError" },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Session not found" }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "integer", "example": 404 },
                "message": { "type": "string", "example": "Not Found" }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "integer", "example": 409 },
                "message": { "type": "string", "example": "Email already exists" }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "integer", "example": 500 },
                "message": { "type": "string", "example": "Internal server error" }
              }
            }
          }
        }
      }
    }
  }
}
