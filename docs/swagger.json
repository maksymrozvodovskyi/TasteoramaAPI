{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    },
    {
      "url": "https://contacts-app-vqqf.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts/{id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689a4c53a949749869605279"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get contact"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Delete contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689a4c53a949749869605279"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact successfully deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Partially updates contact data by the specified ID",
        "operationId": "patchContact",
        "description": "Partially updates contact data by the specified ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689a4c53a949749869605279"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/formdata": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name",
                    "example": "John Deere"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact phone number",
                    "example": 380961711291
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact email",
                    "example": "user@mail.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Contact is marked as favourite (true — added to favourites, false — not)",
                    "example": true,
                    "default": false
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Type of contact",
                    "enum": ["work", "home", "personal"],
                    "default": "personal"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Contact photo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patched a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get all contacts",
        "operationId": "getContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": ["work", "personal", "home"],
              "example": "work"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 40
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "phoneNumber", "email", "contactType"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name",
                    "example": "John Deere"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact phone number",
                    "example": 380961711291
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact email",
                    "example": "user@mail.com"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Type of contact",
                    "enum": ["work", "home", "personal"],
                    "default": "personal"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Contact is marked as favourite (true — added to favourites, false — not)",
                    "example": true,
                    "default": false
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Contact photo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": "Contact created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "qwezxcqweasdzxc22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user with email and password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "qweqwezxcqwe22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user"
                    },
                    "data": {
                      "type": "object",
                      "required": ["accesToken"],
                      "properties": {
                        "accesToken": {
                          "type": "string",
                          "example": "Wad3SGuuobrYmM6o5iQtKLlxUgKIO/KZK4fdm5w-"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh user's session",
        "operationId": "refreshUser",
        "description": "Refresh user's session",
        "security": [],
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Session refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": ["accesToken"],
                      "properties": {
                        "accesToken": {
                          "type": "string",
                          "example": "Wad3SGuuobrYmM6o5iQtKLlxUgKIO/KZK4fdm5w-"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send reset password link",
        "operationId": "resetSendEmail",
        "description": "Send reset password link",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "user@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent"
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset user password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["token", "password"],
                "properties": {
                  "token": {
                    "description": "Token received via email",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2ODg4Y2MzOTBiOGM2ZTVjZTNjOWY4MWEiLCJlbWFpbCI6InNlcmdleXQyMDAwQGdtYWlsLmNvbSIsImlhdCI6MTc1NDA2ODI0NCwiZXhwIjoxNzU0MDY4NTQ0fQ.4mX1VKQ9VOTGIvRf_-AAt6Nixgub3J1JRaGoN3FmfIQ"
                  },
                  "password": {
                    "description": "New password",
                    "type": "string",
                    "example": "zxcqweasdzxcqwwe22"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset"
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "userId",
          "photo",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "689a4c53a949749869605279"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "John Deere"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "example": 380961711291
          },
          "email": {
            "type": "string",
            "description": "Contact email",
            "example": "user@mail.com"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Contact is marked as favourite (true — added to favourites, false — not)",
            "example": true,
            "default": false
          },
          "contactType": {
            "type": "string",
            "description": "Type of contact",
            "enum": ["work", "home", "personal"],
            "default": "personal"
          },
          "userId": {
            "type": "string",
            "description": "Contact userID",
            "example": "689a4c53a949749869605279"
          },
          "photo": {
            "type": "string",
            "description": "Contact photo",
            "default": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-05-08T16:12:14.954168"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-05-08T16:27:14.954168"
          }
        }
      },
      "user": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "68821300b52a441f8f67fc0f"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "example@mail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "qwezxcqweasdzxc22"
          },
          "createdAt": {
            "description": "Contact's creation date",
            "type": "string",
            "format": "date-time",
            "example": "2025-07-23T09:32:14.378+00:00"
          },
          "updatedAt": {
            "description": "Contact's last update date",
            "type": "string",
            "format": "date-time",
            "example": "2025-07-23T09:32:14.378+00:00"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use error"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
